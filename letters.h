// This is a module for generating form letters

#include "dictionary.h"

// SEASHELL_READONLY

// letters_generate(template, dicts, count) generates an array of
//   count new letters (strings) that are based on the template letter
// notes: each letter j (0...count-1) is generated by replacing each
//          keyword found in the template (surrounded by '@'s)
//          by the corresponding value found in dictionary j
//        two '@'s together (an empty keyword) is replaced by a single '@'
//        if a keyword does not appear in the dictionary, it is
//          replaced with the string "ERROR"
//        returns a dynamic array of dynamically allocated strings
//        dict[j] is not modified (for all j)
//        see README.txt for additional information
// requires: count > 0
//           template, dicts and dicts[j] are valid (not NULL)
//           dicts is an array of count dictionaries [not asserted]
//           template contains an even number of '@'s [not asserted]
//           dicts[j] key/values do not contain '@'s [not asserted]
//           dicts[j] key/values are not empty strings [not asserted]
// effects: allocates memory (caller must free each string and array itself)
// time: no requirements, and it does not need to be documented
char **letters_generate(const char *template, struct dictionary *dicts[], 
                        int count);
